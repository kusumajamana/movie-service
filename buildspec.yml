version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR....
      - aws --version
      # Uncomment the following line if you want to use the older login method
      # - $(aws ecr get-login --region ap-south-1 --no-include-email)
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 774305618988.dkr.ecr.us-east-1.amazonaws.com
      - REPOSITORY_URI=774305618988.dkr.ecr.us-east-1.amazonaws.com/movie-img
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')

  build:
    commands:
      - echo Build started on `date`
      - echo Building the JAR file...
      - mvn clean install -DskipTests
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG

  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing to repo...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      # Give your container name
      - DOCKER_CONTAINER_NAME=spring-demo-ecr
      - printf '[{"name":"%s","imageUri":"%s"}]' $DOCKER_CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - echo $DOCKER_CONTAINER_NAME
      - echo Printing imagedefinitions.json...
      - cat imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json
    - target/MovieApplication-0.0.1-SNAPSHOT.jar
